#include "{{ moduleName }}.hpp"
#include <flatmessage.hpp>

using namespace {% for i in modulePath %}{% if is_first %}{{ i }}{% else %}::{{ i }}{% endif %}{% endfor %};

## for dat in data
{##}
BinaryEncoder& operator<<(BinaryEncoder& encoder, const {{ dat/name }}& data)
{

## for attrib in dat/attributes
{##}    encoder << data.{{ attrib/name }};

## endfor
{##}    return encoder;
}

BinaryDecoder& operator>>(BinaryDecoder& decoder, const {{ dat/name }}& data)
{

## for attrib in dat/attributes
{##}    decoder >> data.{{ attrib/name }};

## endfor
{##}    return decoder;
}

## endfor
## if hasMessages
{##}
## for msg in messages
{##}
BinaryEncoder& operator<<(BinaryEncoder& encoder, const {{ msg/name }}& data)
{

## for attrib in msg/attributes
{##}    encoder << data.{{ attrib/name }};

## endfor
{##}    return encoder;
}

BinaryDecoder& operator>>(BinaryDecoder& decoder, const {{ msg/name }}& data)
{

## for attrib in msg/attributes
{##}    decoder >> data.{{ attrib/name }};

## endfor
{##}    return decoder;
}

## endfor
## endif